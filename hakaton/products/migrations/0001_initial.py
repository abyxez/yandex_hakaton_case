# Generated by Django 3.2.3 on 2023-10-08 15:22

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=200, null=True, unique=True, verbose_name='Название категории')),
                ('hash_id', models.CharField(max_length=100, unique=True, verbose_name='Хэшированный ID')),
            ],
        ),
        migrations.CreateModel(
            name='City',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=200, null=True, unique=True, verbose_name='Название города')),
                ('hash_id', models.CharField(max_length=100, unique=True, verbose_name='Хэшированный ID')),
            ],
        ),
        migrations.CreateModel(
            name='Division',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=200, null=True, unique=True, verbose_name='Название дивизиона')),
                ('hash_id', models.CharField(max_length=100, unique=True, verbose_name='Хэшированный ID')),
            ],
        ),
        migrations.CreateModel(
            name='Format',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, unique=True, verbose_name='Название формата')),
            ],
        ),
        migrations.CreateModel(
            name='Group',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=200, null=True, unique=True, verbose_name='Название группы')),
                ('hash_id', models.CharField(max_length=100, unique=True, verbose_name='Хэшированный ID')),
            ],
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, unique=True, verbose_name='Название локации')),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=200, null=True, verbose_name='Название товара')),
                ('hash_id', models.CharField(max_length=100, unique=True, verbose_name='Хэшированный ID')),
            ],
        ),
        migrations.CreateModel(
            name='Size',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, unique=True, verbose_name='Размерная характеристика')),
            ],
        ),
        migrations.CreateModel(
            name='Store',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, default='Лента', max_length=200, null=True, verbose_name='Название магазина')),
                ('hash_id', models.CharField(max_length=100, unique=True, verbose_name='Хэшированный ID')),
            ],
        ),
        migrations.CreateModel(
            name='Subcategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=200, null=True, unique=True, verbose_name='Название подкатегории')),
                ('hash_id', models.CharField(max_length=100, unique=True, verbose_name='Хэшированный ID')),
            ],
        ),
        migrations.CreateModel(
            name='ShoppingMall',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_active', models.IntegerField(verbose_name='Флаг активного магазина')),
                ('city', models.ForeignKey(max_length=200, on_delete=django.db.models.deletion.CASCADE, related_name='shops', to='products.city', verbose_name='Город')),
                ('division', models.ForeignKey(max_length=200, on_delete=django.db.models.deletion.CASCADE, related_name='shops', to='products.division', verbose_name='Дивизион')),
                ('format', models.ForeignKey(max_length=200, on_delete=django.db.models.deletion.CASCADE, related_name='shops', to='products.format', verbose_name='Формат')),
                ('location', models.ForeignKey(max_length=200, on_delete=django.db.models.deletion.CASCADE, to='products.location', verbose_name='Локация')),
                ('size', models.ForeignKey(max_length=200, on_delete=django.db.models.deletion.CASCADE, related_name='shops', to='products.size', verbose_name='Размер')),
                ('store', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='shops', to='products.store', verbose_name='Магазин')),
            ],
            options={
                'verbose_name': 'Магазин',
                'verbose_name_plural': 'Магазины',
                'ordering': ('id',),
            },
        ),
        migrations.CreateModel(
            name='Sale',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(blank=True, null=True, verbose_name='Дата продажи товара')),
                ('sales_type', models.PositiveIntegerField(verbose_name='Флаг наличия промо')),
                ('sales_units', models.FloatField(verbose_name='Число проданных товаров без признака промо')),
                ('sales_units_promo', models.FloatField(verbose_name='Число проданных товаров c признаком промо')),
                ('sales_rub', models.FloatField(verbose_name='Цена проданных товаров без признака промо')),
                ('sales_rub_promo', models.FloatField(verbose_name='Цена проданных товаров c признаком промо')),
                ('sku', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sales', to='products.product', verbose_name='товар')),
                ('store', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sales', to='products.store', verbose_name='магазин')),
            ],
            options={
                'verbose_name': 'Продажа',
                'verbose_name_plural': 'Продажи',
                'ordering': ('-date',),
            },
        ),
        migrations.CreateModel(
            name='ProductStore',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uom', models.IntegerField(verbose_name='Маркер развесовки: в Кг или Шт')),
                ('category', models.ForeignKey(max_length=200, on_delete=django.db.models.deletion.CASCADE, related_name='product_store', to='products.category', verbose_name='Категория')),
                ('group', models.ForeignKey(max_length=200, on_delete=django.db.models.deletion.CASCADE, related_name='product_store', to='products.group', verbose_name='Товарная группа')),
                ('sku', models.ForeignKey(max_length=200, on_delete=django.db.models.deletion.CASCADE, related_name='product_store', to='products.product', verbose_name='Наименование товара')),
                ('store', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='product_store', to='products.store', verbose_name='Торговый центр')),
                ('subcategory', models.ForeignKey(max_length=200, on_delete=django.db.models.deletion.CASCADE, related_name='product_store', to='products.subcategory', verbose_name='Подкатегория')),
            ],
            options={
                'verbose_name': 'Категория',
                'verbose_name_plural': 'Категории',
                'ordering': ('id',),
            },
        ),
        migrations.CreateModel(
            name='Forecast',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(verbose_name='Дата прогноза продажи')),
                ('sales_units', models.PositiveIntegerField(verbose_name='Прогнозируемый спрос в шт')),
                ('sku', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='forecast', to='products.product', verbose_name='товар')),
                ('store', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='forecast', to='products.store', verbose_name='магазин')),
            ],
            options={
                'verbose_name': 'Прогноз продаж',
                'verbose_name_plural': 'Прогноз продаж',
                'ordering': ('date',),
            },
        ),
        migrations.CreateModel(
            name='Excel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uom', models.IntegerField(verbose_name='Маркер развесовки: в Кг или Шт')),
                ('week', models.IntegerField()),
                ('sales_units', models.FloatField(null=True, verbose_name='Число проданных товаров без признака промо')),
                ('target', models.FloatField(null=True)),
                ('difference', models.FloatField(null=True)),
                ('wape', models.FloatField(null=True)),
                ('category', models.ForeignKey(max_length=200, on_delete=django.db.models.deletion.CASCADE, related_name='excel', to='products.category', verbose_name='Категория')),
                ('group', models.ForeignKey(max_length=200, on_delete=django.db.models.deletion.CASCADE, related_name='excel', to='products.group', verbose_name='Товарная группа')),
                ('sku', models.ForeignKey(max_length=200, on_delete=django.db.models.deletion.CASCADE, related_name='excel', to='products.product', verbose_name='Наименование товара')),
                ('store', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='excel', to='products.store', verbose_name='Торговый центр')),
                ('subcategory', models.ForeignKey(max_length=200, on_delete=django.db.models.deletion.CASCADE, related_name='excel', to='products.subcategory', verbose_name='Подкатегория')),
            ],
        ),
    ]
